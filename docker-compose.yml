version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: bidias-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: bidias_ecommerce
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/src/scripts:/docker-entrypoint-initdb.d
    networks:
      - bidias-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bidias-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bidias-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bidias-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 4001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/bidias_ecommerce?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your_super_secure_jwt_secret_key_here
      JWT_REFRESH_SECRET: your_super_secure_refresh_secret_key_here
      JWT_RESET_SECRET: your_super_secure_reset_secret_key_here
      FRONTEND_URL: http://localhost:3003
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SECURE: false
    ports:
      - "4001:4001"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads:/tmp/uploads
    networks:
      - bidias-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bidias-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:4001
      REACT_APP_STRIPE_PUBLISHABLE_KEY: your_stripe_publishable_key_here
    ports:
      - "3003:3003"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - bidias-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local

networks:
  bidias-network:
    driver: bridge
