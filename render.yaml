services:
  # Backend API Service
  - type: web
    name: ecommerce-backend
    runtime: node
    plan: starter
    buildCommand: cd backend && npm install && npm run build
    startCommand: cd backend && npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 4000
      - key: MONGODB_URI
        fromService:
          type: pserv
          name: mongodb
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_REFRESH_SECRET
        generateValue: true
      - key: JWT_RESET_SECRET
        generateValue: true
      - key: JWT_EXPIRES_IN
        value: 1h
      - key: FRONTEND_URL
        fromService:
          type: web
          name: ecommerce-frontend
          property: host
      - key: SMTP_HOST
        value: smtp.gmail.com
      - key: SMTP_PORT
        value: 587
      - key: SMTP_SECURE
        value: false
      - key: UPLOAD_PATH
        value: /tmp/uploads
      - key: MAX_FILE_SIZE
        value: 10MB

  # Frontend Static Site
  - type: web
    name: ecommerce-frontend
    runtime: static
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: ./frontend/build
    pullRequestPreviewsEnabled: false
    headers:
      - path: /*
        name: X-Robots-Tag
        value: noindex
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: REACT_APP_API_URL
        fromService:
          type: web
          name: ecommerce-backend
          property: host

databases:
  - name: mongodb
    plan: starter
    
# Optional: Redis for caching (can be added later)
# - name: redis
#   plan: starter
